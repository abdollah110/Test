Script for dumping ascii LHE file from a GEN root file

GeneratorInterface/LHEInterface/test/testExternalLHEAsciiDumper_cfg.py


producing the LHE files using Madgraph:
My collaborators, Maikel de Vries and Anna Kaminska, have started putting our UFO models (for MadGraph5 simulation on the Feynrules website, https://feynrules.irmp.ucl.ac.be/wiki/SimplifiedDM , but for your convenience, I've attached directly the model files for the leptoquark signal.


Maikel has also written some instructions for how to run MadGraph5 to generate our signal events:


First, download and unzip the MadGraph5 program

https://launchpad.net/mg5amcnlo .  Then, you need to unzip and put the resulting lq_met directory in "MG5_aMC_v2_3_3/models/" subdirectory of the MadGraph5 directory. 




You can then run the Madgraph5 executable by going to "MG5_aMC_v2_3_3/bin/mg5_aMC", which opens up a "MG5_aMC>" prompt, that takes the following commands:



To generate mixed signature for the
leptoquark (1st generation), you can use:


import model lq_met
define sm = u u~ d d~ e+ e- ve ve~

generate    p p > m1 m1~ QCD=2 QED=0 NP=0, m1  > sm sm, (m1~ > ~dm ~x1~, ~x1~ > sm sm ~dm)
add process p p > m1 m1~ QCD=2 QED=0 NP=0, m1~ > sm sm, (m1  > ~dm ~x1 , ~x1  > sm sm ~dm)
add process p p > m2 m2~ QCD=2 QED=0 NP=0, m2  > sm sm, (m2~ > ~dm ~x2~, ~x2~ > sm sm ~dm)
add process p p > m2 m2~ QCD=2 QED=0 NP=0, m2~ > sm sm, (m2  > ~dm ~x2 , ~x2  > sm sm ~dm)

output pp_mm_mix_gen1_lq




https://twiki.cern.ch/twiki/bin/viewauth/CMS/MbjaSamples


LHE Text Files to LHE:
cmsDriver.py step1 --filein file:events.lhe  --fileout file:LHE.root --mc --eventcontent LHE --datatier LHE 
--conditions MCRUN2_71_V1::All --step NONE --python_filename LHE_cfg.py --no_exec 
--customise Configuration/DataProcessing/Utils.addMonitoring -n -1


 LHE to GEN-SIM:
 cmsDriver.py Configuration/GenProduction/python/fragment.py --filein file:LHE.root --fileout file:GEN-SIM.root --mc --eventcontent RAWSIM 
 --customise SLHCUpgradeSimulations/Configuration/postLS1Customs.customisePostLS1,Configuration/DataProcessing/Utils.addMonitoring 
 --datatier GEN-SIM --conditions MCRUN2_71_V1::All --beamspot Realistic50ns13TeVCollision --step GEN,SIM --magField 38T_PostLS1 
 --python_filename GEN-SIM_cfg.py --no_exec -n -1
 
 
 GEN-SIM to DIGI-RECO_1: 
 cmsDriver.py step1 --filein file:GEN-SIM.root --fileout file:DIGI-RECO_step1.root 
 --pileup_input "dbs:/MinBias_TuneCUETP8M1_13TeV-pythia8/RunIISummer15GS-MCRUN2_71_V1-v2/GEN-SIM" 
 --mc --eventcontent RAWSIM --pileup 2016_25ns_SpringMC_PUScenarioV1_PoissonOOTPU --datatier GEN-SIM-RAW 
 --conditions 80X_mcRun2_asymptotic_2016_v3 --step DIGI,L1,DIGI2RAW,HLT:@frozen25ns --era Run2_25ns 
 --python_filename DIGI-RECO_1_cfg.py --no_exec --customise Configuration/DataProcessing/Utils.addMonitoring -n -1
 
 
 DIGI-RECO_1 to DIGI-RECO_2 (AOD) :
 cmsDriver.py step2 --filein file:DIGI-RECO_step1.root --fileout file:DIGI-RECO.root --mc --eventcontent AODSIM,DQM --runUnscheduled
 --datatier AODSIM,DQMIO --conditions 80X_mcRun2_asymptotic_2016_v3 --step RAW2DIGI,L1Reco,RECO,EI,DQM:DQMOfflinePOGMC --era Run2_25ns
 --python_filename DIGI-RECO_2_cfg.py --no_exec --customise Configuration/DataProcessing/Utils.addMonitoring -n -1
 
 AOD to MiniAODv2 :
 cmsDriver.py step1 --filein file:DIGI-RECO.root --fileout file:MiniAODv2.root --mc --eventcontent MINIAODSIM --runUnscheduled 
 --datatier MINIAODSIM --conditions 80X_mcRun2_asymptotic_2016_miniAODv2_v0 --step PAT --era Run2_25ns
 --python_filename MiniAODv2_1_cfg.py --no_exec --customise Configuration/DataProcessing/Utils.addMonitoring -n -1
 
 
 
 https://github.com/CMS-SUS-XPAG/GenLHEfiles/blob/master/Run2Mechanism/README.md#gen-only
 
